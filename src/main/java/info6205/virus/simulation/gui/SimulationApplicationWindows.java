package info6205.virus.simulation.gui;

import info6205.virus.simulation.console.SimulationApplication;

import javax.swing.*;
import java.awt.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class SimulationApplicationWindows {

    private JPanel canvas;
    private JPanel mainPanel;
    private JButton runButton;
    private JTextField textField1;
    private JButton settingButton;
    private SimulationApplication simulationApplication;
    private SimulationRender render;
    private static Logger logger = Logger.getLogger(SimulationApplication.class.getName());

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public JPanel getCanvas() {
        return canvas;
    }

    public SimulationApplicationWindows(SimulationApplication simulationApplication) {
        this.simulationApplication = simulationApplication;
        JFrame jFrame = new JFrame("VirusSimulation");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        jFrame.getContentPane().add(mainPanel);
        jFrame.pack();
        jFrame.setVisible(true);
        jFrame.setLocation(dim.width / 2 - jFrame.getSize().width / 2, dim.height / 2 - jFrame.getSize().height / 2);
        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.render = new SimulationRender(canvas.getHeight(), canvas.getWidth(), 0, simulationApplication.getMap().getHigh(), 0.1);
        logger.log(Level.INFO, "Start render.");

    }

    public void render() {
        // Render AreaBase
        render.renderAreaBase(simulationApplication.getAreaManger().getRoadAreas(), canvas.getGraphics());
        render.renderAreaBase(simulationApplication.getAreaManger().getHouses(), canvas.getGraphics());
        render.renderAreaBase(simulationApplication.getAreaManger().getHospitals(), canvas.getGraphics());
        render.renderAreaBase(simulationApplication.getAreaManger().getMalls(), canvas.getGraphics());
        render.renderAreaBase(simulationApplication.getAreaManger().getOffices(), canvas.getGraphics());
        render.renderAreaBase(simulationApplication.getAreaManger().getParks(), canvas.getGraphics());
        render.renderAreaBase(simulationApplication.getAreaManger().getRestaurants(), canvas.getGraphics());
        render.renderAreaBase(simulationApplication.getAreaManger().getSchools(), canvas.getGraphics());
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.setMinimumSize(new Dimension(1000, 750));
        mainPanel.setPreferredSize(new Dimension(1000, 750));
        canvas = new JPanel();
        canvas.setLayout(new BorderLayout(0, 0));
        canvas.setMinimumSize(new Dimension(1000, 700));
        canvas.setPreferredSize(new Dimension(1000, 700));
        mainPanel.add(canvas, BorderLayout.NORTH);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        mainPanel.add(panel1, BorderLayout.SOUTH);
        runButton = new JButton();
        runButton.setPreferredSize(new Dimension(150, 30));
        runButton.setText("Run");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(runButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Speed:");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        textField1 = new JTextField();
        textField1.setPreferredSize(new Dimension(100, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(textField1, gbc);
        settingButton = new JButton();
        settingButton.setPreferredSize(new Dimension(150, 30));
        settingButton.setText("Setting");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(settingButton, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer4, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
